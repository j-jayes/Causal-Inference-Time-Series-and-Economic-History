[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Causal Inference Time Series and Economic History",
    "section": "",
    "text": "Lorem ipsum"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Causal Inference Time Series and Economic History",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nTranslate the code from session 3 to R.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslate the code from session 1 to R.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslate the code from session 2 to R.\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "replication-in-R/Kelly and O Grada (2013).html",
    "href": "replication-in-R/Kelly and O Grada (2013).html",
    "title": "Kelly and O Grada (2013)",
    "section": "",
    "text": "Translate the code from session 3 to R.\n\n\n\nlibrary(tidyverse)\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.5     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n\n\nWarning: package 'tibble' was built under R version 4.1.2\n\n\nWarning: package 'readr' was built under R version 4.1.2\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\ntheme_set(theme_light())\n\ndf <- readxl::read_excel(here::here(\"course-content/Class 3/Kelly and O Grada (2013).xlsx\"),\n                         range = \"A1:F256\")\n\n# tidy up variable names\ndf <- df %>% \n  janitor::clean_names()\n\n\n\n\n\ndf <- df %>% \n  mutate(real_gdp_pc = real_gdp / population,\n         real_agricultural_output_pc = real_agricultural_output / population,\n         # logs\n         across(c(crude_death_rate:real_wage, contains(\"_pc\")), log, .names = \"ln_{.col}\"))\n\n\ndf %>% \n  skimr::skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n255\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n12\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1\n1672.00\n73.76\n1545.00\n1608.50\n1672.00\n1735.50\n1799.00\n▇▇▇▇▇\n\n\ncrude_death_rate\n0\n1\n27.50\n4.60\n19.20\n24.90\n26.80\n29.00\n53.90\n▇▇▁▁▁\n\n\nreal_wage\n0\n1\n72.57\n11.34\n50.55\n65.22\n71.05\n77.13\n114.01\n▃▇▃▁▁\n\n\nreal_agricultural_output\n0\n1\n106.56\n40.04\n41.51\n77.58\n95.74\n128.49\n216.93\n▅▇▃▂▂\n\n\nreal_gdp\n0\n1\n92.79\n45.63\n32.46\n56.77\n79.00\n119.32\n226.06\n▇▅▃▂▁\n\n\npopulation\n0\n1\n99.86\n24.78\n55.98\n85.01\n100.00\n110.00\n170.01\n▅▇▆▂▁\n\n\nreal_gdp_pc\n0\n1\n0.88\n0.23\n0.52\n0.69\n0.80\n1.09\n1.34\n▇▇▃▆▅\n\n\nreal_agricultural_output_pc\n0\n1\n1.05\n0.19\n0.59\n0.90\n1.06\n1.19\n1.54\n▂▆▇▆▁\n\n\nln_crude_death_rate\n0\n1\n3.30\n0.15\n2.95\n3.21\n3.29\n3.37\n3.99\n▂▇▂▁▁\n\n\nln_real_wage\n0\n1\n4.27\n0.15\n3.92\n4.18\n4.26\n4.35\n4.74\n▂▇▇▂▁\n\n\nln_real_gdp_pc\n0\n1\n-0.16\n0.26\n-0.64\n-0.38\n-0.23\n0.08\n0.29\n▃▇▃▅▆\n\n\nln_real_agricultural_output_pc\n0\n1\n0.03\n0.19\n-0.53\n-0.10\n0.06\n0.18\n0.43\n▁▃▆▇▃\n\n\n\n\n\n\n\n\nWhat are we doing?\n\n3 sets of regressions\nChange in crude death rate is dependent var\n5 time periods"
  },
  {
    "objectID": "replication-in-R/Okun's Law.html",
    "href": "replication-in-R/Okun's Law.html",
    "title": "Okun’s Law",
    "section": "",
    "text": "Translate the code from session 1 to R.\n\n\n\nlibrary(tidyverse)\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.5     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n\n\nWarning: package 'tibble' was built under R version 4.1.2\n\n\nWarning: package 'readr' was built under R version 4.1.2\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\ntheme_set(theme_light())\n\ndf <- readxl::read_excel(here::here(\"course-content/Class 1/Okun's Law.xlsx\"), range = \"A1:E45\")\n\ndf <- df %>% \n  janitor::clean_names()\n\n\n\n\n\ndf %>%\n  ggplot(aes(x = change_in_unemployment_rate_pp, y = real_gdp_growth_percent)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 1)) +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  geom_vline(xintercept = 0, lty = 2) +\n  geom_hline(yintercept = 0, lty = 2) +\n  labs(\n    x = \"Change in unemployment rate\",\n    y = \"Real GDP Growth\",\n    title = \"Okun's Law in the UK\",\n    subtitle = \"1871-1913\"\n  )\n\n`geom_smooth()` using formula 'y ~ x'\n\n\nWarning: Removed 1 rows containing non-finite values (stat_smooth).\n\n\nWarning: Removed 1 rows containing missing values (geom_point).\n\n\n\n\n\n\n\n\n\nlm <- lm(real_gdp_growth_percent ~ change_in_unemployment_rate_pp, data = df)\n\nlm %>%\n  broom::tidy()\n\n# A tibble: 2 x 5\n  term                           estimate std.error statistic       p.value\n  <chr>                             <dbl>     <dbl>     <dbl>         <dbl>\n1 (Intercept)                        1.83     0.251      7.30 0.00000000631\n2 change_in_unemployment_rate_pp    -1.36     0.218     -6.25 0.000000193  \n\nlm %>% \n  gtsummary::tbl_regression(intercept = T) \n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n1.8\n1.3, 2.3\n<0.001\n    change_in_unemployment_rate_pp\n-1.4\n-1.8, -0.92\n<0.001\n  \n  \n  \n    \n      \n        \n          \n            1\n          \n           \n          CI = Confidence Interval"
  },
  {
    "objectID": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html",
    "href": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html",
    "title": "Swedish Real GDP per Capita, 1800-2010",
    "section": "",
    "text": "Translate the code from session 2 to R.\n\n\n\nlibrary(tidyverse)\ntheme_set(theme_light())\ndf <- readxl::read_excel(here::here(\"course-content/Class 2/Swedish Real GDP per Capita, 1800-2010.xlsx\"))\n\ndf <- df %>% \n  janitor::clean_names()\n\ndf <- df %>% \n  mutate(ln_real_gdp_per_capita = log(real_gdp_per_capita)*100)\n\n\n\n\n\ndf %>% \n  ggplot(aes(year, real_gdp_per_capita)) +\n  geom_point() +\n  geom_line()\n\n\n\ndf %>% \n  ggplot(aes(year, ln_real_gdp_per_capita)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\n\n\nIn the function below we do a number of things\nI walk through each:\n\nWe have two inputs, the smoothing factor, sf and a label called label.\nFrom the mFilter library we call hpfilter on the logged version of the real gdp series. We supply the smoothing factor with command freq = sf. This is assigned to hp as an mFilter list object.\nWe create a tibble from this object which is easier to work with.\nWe create our differenced variables for the cycle and trend components.\nWe save this tibble as an RDS file with the label we provide as an argument to the function.\nWe then plot the series components as a ggplot, faceting by the components.\n\n\n# tsfilter hp HP_Cycle_100 = ln_RealGDPperCapita, smooth(100) trend(HP_Trend_100)\n\nlibrary(mFilter)\n\nplot_hp_filter <- function(sf, label) {\n  message(\"Plotting HP filtered series with smoothing factor \", sf)\n  hp <- mFilter::hpfilter(df$ln_real_gdp_per_capita, freq = sf)\n\n  df_hp <- tibble(\n    year = df$year,\n    cycle = hp$cycle,\n    # don't know why this is hp$trend[,1]?\n    trend = hp$trend[, 1]\n  )\n\n  df_hp <- df_hp %>%\n    mutate(\n      d_cycle = cycle - lag(cycle),\n      d_trend = trend - lag(trend),\n      reg = label\n    )\n\n  df_hp %>% write_rds(here::here(paste0(\"replication-in-R/Class 2/\", label, \".rds\")))\n\n  df_hp %>%\n    pivot_longer(cycle:d_trend) %>%\n    # this puts the facets in a nice order\n    mutate(name = fct_relevel(name, \"d_trend\", after = 3L)) %>%\n    ggplot(aes(year, value, colour = name)) +\n    geom_line(show.legend = F) +\n    facet_wrap(~name, nrow = 2, scales = \"free\") +\n    labs(\n      x = \"Year\",\n      y = \"ln_RealGDPperCapita cycle and trend components from hp filter\",\n      title = paste0(\"Smoothing factor \", sf)\n    )\n}\n\n\nplot_hp_filter(100, \"hp_100\")\n\n\n\n\n\n\n\n\n# tsfilter hp HP_Cycle_10000 = ln_RealGDPperCapita, smooth(10000) trend(HP_Trend_10000)\n\nplot_hp_filter(1000, \"hp_1000\")\n\n\n\n\n\n\n\n\n# tsfilter hp HP_Cycle_6 = ln_RealGDPperCapita, smooth(6.25) trend(HP_Trend_6)\n\nplot_hp_filter(6.25, \"hp_6_25\")"
  },
  {
    "objectID": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html#regression-smoothing",
    "href": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html#regression-smoothing",
    "title": "Swedish Real GDP per Capita, 1800-2010",
    "section": "Regression smoothing",
    "text": "Regression smoothing\nHere we use our mutate command to create the variables we will need for the quadratic regression and the Hamilton filter.\n\ndf <- df %>% \n  mutate(year_2 = year^2,\n         l2_ln_real_gdp_per_capita = lag(ln_real_gdp_per_capita, n = 2))\n\nNow we create a function that will take a list of variables and a label. It does a regression, prints a summary of the regression and then makes a plot of the original logged series and a trend line created from the coefficients in the regression.\n\naugment_reg <- function(var, label) {\n  df_temp <- df %>%\n    select(ln_real_gdp_per_capita, {{ var }})\n\n  reg <- lm(ln_real_gdp_per_capita ~ ., data = df_temp)\n\n  summary <- reg %>% summary()\n\n  df_reg <- reg %>%\n    broom::augment() %>%\n    mutate(\n      trend = .fitted,\n      cycle = .resid,\n      d_cycle = cycle - lag(cycle),\n      d_trend = trend - lag(trend),\n      reg = label\n    )\n\n  df_reg %>% write_rds(here::here(paste0(\"replication-in-R/Class 2/\", label, \".rds\")))\n\n  plot <- df_reg %>%\n    pivot_longer(cols = c(ln_real_gdp_per_capita, trend)) %>%\n    ggplot(aes(year, value, colour = name)) +\n    geom_line()\n  \n  out <- list(summary, plot)\n  \n  return(out)\n  \n}\n\n\nOLS\n\nLinear\nThe linear regression obviously produces a nice straight regression line.\n\n# reg ln_RealGDPperCapita Year\n# predict OLS_Lin_Trend, xb\n# predict OLS_Lin_Cycle, res\n\naugment_reg(year, \"linear_reg\")\n\n[[1]]\n\nCall:\nlm(formula = ln_real_gdp_per_capita ~ ., data = df_temp)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-43.270 -24.553  -4.986  24.971  59.570 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -2432.0502    57.3685  -42.39   <2e-16 ***\nyear            1.7003     0.0301   56.49   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.63 on 209 degrees of freedom\nMultiple R-squared:  0.9385,    Adjusted R-squared:  0.9382 \nF-statistic:  3191 on 1 and 209 DF,  p-value: < 2.2e-16\n\n\n[[2]]\n\n\n\n\n\n\n\nQuadratic\nThe quadratic regression produces a lovely parabolic shape.\n\n# gen Year2 = Year^2\n# reg ln_RealGDPperCapita Year Year2\n# predict OLS_Nonlin_Trend, xb\n# predict OLS_Nonlin_Cycle, res\n\naugment_reg(c(year, year_2), \"quadratic_reg\")\n\n[[1]]\n\nCall:\nlm(formula = ln_real_gdp_per_capita ~ ., data = df_temp)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-32.283  -5.950  -1.446   6.157  26.128 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.426e+04  7.781e+02   31.18   <2e-16 ***\nyear        -2.636e+01  8.175e-01  -32.24   <2e-16 ***\nyear_2       7.364e-03  2.145e-04   34.32   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.34 on 208 degrees of freedom\nMultiple R-squared:  0.9908,    Adjusted R-squared:  0.9907 \nF-statistic: 1.117e+04 on 2 and 208 DF,  p-value: < 2.2e-16\n\n\n[[2]]\n\n\n\n\n\n\n\n\nHamilton\nFor yearly data: yt+2 = β0 + β1yt + ut+2.\nI think this is wrong though?\n\n# reg ln_RealGDPperCapita L2.ln_RealGDPperCapita\n# predict Ham_Trend, xb\n# predict Ham_Cycle, res\n\nlm_hamilton <- lm(ln_real_gdp_per_capita ~ l2_ln_real_gdp_per_capita, data = df)\n\nlm_hamilton %>% \n  summary()\n\n\nCall:\nlm(formula = ln_real_gdp_per_capita ~ l2_ln_real_gdp_per_capita, \n    data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-17.9392  -2.8542   0.4106   3.2793  13.4767 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               -4.705552   2.759536  -1.705   0.0897 .  \nl2_ln_real_gdp_per_capita  1.009656   0.003399 297.059   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.189 on 207 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.9977,    Adjusted R-squared:  0.9976 \nF-statistic: 8.824e+04 on 1 and 207 DF,  p-value: < 2.2e-16\n\ndf_lm_hamilton <- lm_hamilton %>% \n  broom::augment() %>% \n  bind_cols(df %>% \n              select(year) %>% \n              tail(209)) %>% \n  select(-.rownames)\n\ndf_lm_hamilton %>%\n  mutate(reg = \"hamilton\") %>%\n  mutate(\n    trend = .fitted,\n    cycle = .resid,\n    d_cycle = cycle - lag(cycle),\n    d_trend = trend - lag(trend),\n  ) %>%\n  write_rds(here::here(paste0(\"replication-in-R/Class 2/\", \"hamilton\", \".rds\")))\n\n\ndf_lm_hamilton %>% \n  pivot_longer(cols = c(ln_real_gdp_per_capita, .fitted)) %>% \n  ggplot(aes(year, value, colour = name)) +\n  geom_line()"
  },
  {
    "objectID": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html#comparison-1",
    "href": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html#comparison-1",
    "title": "Swedish Real GDP per Capita, 1800-2010",
    "section": "Comparison",
    "text": "Comparison\nRead in all of the data\n\nfilelist <- list.files(here::here(paste0(\"replication-in-R/Class 2/\")), pattern = \".rds\") %>%\n  as_tibble() %>%\n  rename(filename = value) %>%\n  mutate(path = str_c(here::here(paste0(\"replication-in-R/Class 2/\", filename))))\n\ndf_long <- filelist %>%\n  mutate(data = purrr::map(path, read_rds))\n\ndf_long <- df_long %>%\n  select(-c(filename, path)) %>%\n  unnest(cols = c(data))\n\n\nComparison of all components\n\ndf_long %>%\n  pivot_longer(cols = c(trend, cycle, d_trend, d_cycle)) %>%\n  mutate(name = fct_relevel(name, \"d_trend\", after = 3L)) %>%\n  ggplot(aes(year, value, colour = reg)) +\n  geom_line() +\n  facet_wrap(~name, scales = \"free_y\") +\n  labs(x = \"Year\",\n       y = NULL,\n       colour = \"Smoother\")\n\n\n\n\n\n\nComparison of trend components\n\ndf_long %>%\n  pivot_longer(cols = c(trend, cycle, d_trend, d_cycle)) %>%\n  filter(name == \"trend\") %>% \n  ggplot(aes(year, value, colour = reg)) +\n  geom_line() +\n  facet_wrap(~name, scales = \"free_y\") +\n  labs(x = \"Year\",\n       y = NULL,\n       colour = \"Smoother\")\n\n\n\n\n\n\nComparison of cycle components\n\ndf_long %>%\n  pivot_longer(cols = c(trend, cycle, d_trend, d_cycle)) %>%\n  filter(name == \"cycle\") %>% \n  ggplot(aes(year, value, colour = reg)) +\n  geom_line() +\n  facet_wrap(~name, scales = \"free_y\") +\n  labs(x = \"Year\",\n       y = NULL,\n       colour = \"Smoother\")\n\n\n\n\n\n\nCorrelation\n\nlibrary(corrr)\n\ncorr <- df_long %>% \n  select(year, reg, cycle) %>% \n  pivot_wider(names_from = reg, values_from = cycle) %>% \n  select(-year) %>% \n  correlate() %>% \n  rearrange() %>% \n  shave()\n\ncorr %>% \n  knitr::kable(digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\nhp_100\nhp_6_25\nhamilton\nhp_1000\nquadratic_reg\nlinear_reg\n\n\n\n\nhp_100\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nhp_6_25\n0.904\nNA\nNA\nNA\nNA\nNA\n\n\nhamilton\n0.680\n0.742\nNA\nNA\nNA\nNA\n\n\nhp_1000\n0.947\n0.786\n0.603\nNA\nNA\nNA\n\n\nquadratic_reg\n0.372\n0.296\n0.318\n0.449\nNA\nNA\n\n\nlinear_reg\n0.144\n0.115\n-0.051\n0.175\n0.387\nNA\n\n\n\n\n\nWe can visualize this nicely too\n\ncorr %>% \n  rplot(shape = 15, colours = c(\"darkorange\", \"darkcyan\", \"pink\"), print_cor = T)"
  }
]