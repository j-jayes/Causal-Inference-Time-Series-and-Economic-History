[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Causal Inference Time Series and Economic History",
    "section": "",
    "text": "Lorem ipsum"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Causal Inference Time Series and Economic History",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nTranslate the code from session 3 to R.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslate the code from session 1 to R.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslate the code from session 2 to R.\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "replication-in-R/Kelly and O Grada (2013).html",
    "href": "replication-in-R/Kelly and O Grada (2013).html",
    "title": "Kelly and O Grada (2013)",
    "section": "",
    "text": "Translate the code from session 3 to R.\n\n\n\nlibrary(tidyverse)\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.5     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n\n\nWarning: package 'tibble' was built under R version 4.1.2\n\n\nWarning: package 'readr' was built under R version 4.1.2\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\ntheme_set(theme_light())\n\ndf <- readxl::read_excel(here::here(\"course-content/Class 3/Kelly and O Grada (2013).xlsx\"),\n                         range = \"A1:F256\")\n\n# tidy up variable names\ndf <- df %>% \n  janitor::clean_names()\n\n\n\n\n\ndf <- df %>%\n  mutate(\n    real_gdp_pc = real_gdp / population,\n    real_agricultural_output_pc = real_agricultural_output / population,\n    # create logs with prefix ln_\n    across(c(crude_death_rate:real_wage, contains(\"_pc\")), log, .names = \"ln_{.col}\"),\n    # create differences with prefix d_\n    across(c(contains(\"ln_\")), ~ . - lag(., 1), .names = \"d_{.col}\"))\n\nNow making the lags of the differenced variables: I don’t love this for loop - but I don’t know a better way yet. Perhaps using the recipes package?\n\nfor (i in 1:4) {\n  message(\"making d_ for \", i)\n  df <- df %>%\n    mutate(across(starts_with(\"d_ln\"), ~ lag(., i), .names = paste0(\"l\", i, \"_{.col}\")))\n}\n\nmaking d_ for 1\n\n\nmaking d_ for 2\n\n\nmaking d_ for 3\n\n\nmaking d_ for 4\n\n\n\n\n\n\n# library(recipes)\n# \n# rec <- recipe(d_ln_crude_death_rate ~ ., data = df) %>% \n#   step_log(c(crude_death_rate:real_wage, contains(\"_pc\")), id = rand_id(prefix = \"ln_\"))\n# \n# \n# rec %>% prep() %>% bake(new_data = NULL)\n\n\ndf %>% \n  skimr::skim()\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n255\n\n\nNumber of columns\n32\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n32\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1.00\n1672.00\n73.76\n1545.00\n1608.50\n1672.00\n1735.50\n1799.00\n▇▇▇▇▇\n\n\ncrude_death_rate\n0\n1.00\n27.50\n4.60\n19.20\n24.90\n26.80\n29.00\n53.90\n▇▇▁▁▁\n\n\nreal_wage\n0\n1.00\n72.57\n11.34\n50.55\n65.22\n71.05\n77.13\n114.01\n▃▇▃▁▁\n\n\nreal_agricultural_output\n0\n1.00\n106.56\n40.04\n41.51\n77.58\n95.74\n128.49\n216.93\n▅▇▃▂▂\n\n\nreal_gdp\n0\n1.00\n92.79\n45.63\n32.46\n56.77\n79.00\n119.32\n226.06\n▇▅▃▂▁\n\n\npopulation\n0\n1.00\n99.86\n24.78\n55.98\n85.01\n100.00\n110.00\n170.01\n▅▇▆▂▁\n\n\nreal_gdp_pc\n0\n1.00\n0.88\n0.23\n0.52\n0.69\n0.80\n1.09\n1.34\n▇▇▃▆▅\n\n\nreal_agricultural_output_pc\n0\n1.00\n1.05\n0.19\n0.59\n0.90\n1.06\n1.19\n1.54\n▂▆▇▆▁\n\n\nln_crude_death_rate\n0\n1.00\n3.30\n0.15\n2.95\n3.21\n3.29\n3.37\n3.99\n▂▇▂▁▁\n\n\nln_real_wage\n0\n1.00\n4.27\n0.15\n3.92\n4.18\n4.26\n4.35\n4.74\n▂▇▇▂▁\n\n\nln_real_gdp_pc\n0\n1.00\n-0.16\n0.26\n-0.64\n-0.38\n-0.23\n0.08\n0.29\n▃▇▃▅▆\n\n\nln_real_agricultural_output_pc\n0\n1.00\n0.03\n0.19\n-0.53\n-0.10\n0.06\n0.18\n0.43\n▁▃▆▇▃\n\n\nd_ln_crude_death_rate\n1\n1.00\n0.00\n0.14\n-0.50\n-0.07\n0.00\n0.06\n0.55\n▁▂▇▁▁\n\n\nd_ln_real_wage\n1\n1.00\n0.00\n0.11\n-0.35\n-0.06\n0.00\n0.07\n0.42\n▁▃▇▂▁\n\n\nd_ln_real_gdp_pc\n1\n1.00\n0.00\n0.08\n-0.31\n-0.04\n0.00\n0.04\n0.26\n▁▁▇▃▁\n\n\nd_ln_real_agricultural_output_pc\n1\n1.00\n0.00\n0.16\n-0.60\n-0.10\n-0.01\n0.10\n0.46\n▁▁▇▅▁\n\n\nl1_d_ln_crude_death_rate\n2\n0.99\n0.00\n0.14\n-0.50\n-0.07\n0.00\n0.06\n0.55\n▁▂▇▁▁\n\n\nl1_d_ln_real_wage\n2\n0.99\n0.00\n0.11\n-0.35\n-0.06\n0.00\n0.07\n0.42\n▁▃▇▂▁\n\n\nl1_d_ln_real_gdp_pc\n2\n0.99\n0.00\n0.08\n-0.31\n-0.04\n0.00\n0.04\n0.26\n▁▁▇▃▁\n\n\nl1_d_ln_real_agricultural_output_pc\n2\n0.99\n0.00\n0.16\n-0.60\n-0.10\n0.00\n0.10\n0.46\n▁▁▇▅▁\n\n\nl2_d_ln_crude_death_rate\n3\n0.99\n0.00\n0.14\n-0.50\n-0.07\n0.00\n0.06\n0.55\n▁▂▇▁▁\n\n\nl2_d_ln_real_wage\n3\n0.99\n0.00\n0.11\n-0.35\n-0.06\n0.00\n0.07\n0.42\n▁▃▇▂▁\n\n\nl2_d_ln_real_gdp_pc\n3\n0.99\n0.00\n0.08\n-0.31\n-0.04\n0.00\n0.04\n0.26\n▁▁▇▃▁\n\n\nl2_d_ln_real_agricultural_output_pc\n3\n0.99\n0.00\n0.16\n-0.60\n-0.10\n-0.01\n0.10\n0.46\n▁▁▇▅▁\n\n\nl3_d_ln_crude_death_rate\n4\n0.98\n0.00\n0.14\n-0.50\n-0.07\n0.00\n0.06\n0.55\n▁▂▇▁▁\n\n\nl3_d_ln_real_wage\n4\n0.98\n0.00\n0.11\n-0.35\n-0.06\n0.00\n0.07\n0.42\n▁▃▇▂▁\n\n\nl3_d_ln_real_gdp_pc\n4\n0.98\n0.00\n0.08\n-0.31\n-0.04\n0.00\n0.05\n0.26\n▁▁▇▃▁\n\n\nl3_d_ln_real_agricultural_output_pc\n4\n0.98\n0.00\n0.16\n-0.60\n-0.10\n0.00\n0.10\n0.46\n▁▁▇▅▁\n\n\nl4_d_ln_crude_death_rate\n5\n0.98\n0.00\n0.14\n-0.50\n-0.07\n0.00\n0.06\n0.55\n▁▂▇▁▁\n\n\nl4_d_ln_real_wage\n5\n0.98\n0.00\n0.11\n-0.35\n-0.06\n0.00\n0.07\n0.42\n▁▃▇▂▁\n\n\nl4_d_ln_real_gdp_pc\n5\n0.98\n0.00\n0.08\n-0.31\n-0.04\n0.00\n0.05\n0.26\n▁▁▇▃▁\n\n\nl4_d_ln_real_agricultural_output_pc\n5\n0.98\n0.00\n0.16\n-0.60\n-0.11\n0.00\n0.10\n0.46\n▁▁▇▅▁\n\n\n\n\n\n\n\n\nWhat are we doing?\n\n3 sets of regressions\nChange in crude death rate is dependent var\n5 time periods\n\nWe should use the many models approach from R4DS because we’re doing similar regressions on different sections of the data frame.\n\nperiods <- tibble(left = c(\n  1546,\n  1600,\n  1650,\n  1700,\n  1750\n)) %>%\n  mutate(\n    right = case_when(\n      left == 1546 ~ 1599,\n      TRUE ~ left + 49\n    ),\n    period = row_number()\n  )\n\nperiods <- periods %>% \n  group_by(period) %>% \n  mutate(year = paste0(left:right, collapse = \", \")) %>% \n  ungroup() %>% \n  separate_rows(year, sep = \", \", convert = T) %>% \n  dplyr::select(-c(left, right))\n\ndf_by_period <- df %>% \n  inner_join(periods)\n\nJoining, by = \"year\"\n\ndf_by_period <- df_by_period %>% \n  filter(!is.na(period)) %>%\n  group_by(period) %>%\n  nest() \n\nFunction to do regression\n\nreg_model <- function(df, vars){\n  df_temp <- df %>% \n    dplyr::select(d_ln_crude_death_rate, vars)\n  \n  lm(d_ln_crude_death_rate ~ ., data = df_temp)\n}\n\n\n\n\n\ndf_by_period_reg <- df_by_period %>%\n  mutate(model = map(data, ~ reg_model(df = .,\n                                       vars = \n                                         c(contains(\"_d_ln_real_wage\"), \n                                           contains(\"d_ln_crude_death_rate\")))))\n\nNote: Using an external vector in selections is ambiguous.\ni Use `all_of(vars)` instead of `vars` to silence this message.\ni See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\nThis message is displayed once per session.\n\n\nWhat do the regression outputs look like?\n\ndf_by_period_reg %>% \n  mutate(summary = map(model, summary)) %>% \n  pull(summary)\n\n[[1]]\n\nCall:\nlm(formula = d_ln_crude_death_rate ~ ., data = df_temp)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.29614 -0.06895 -0.00877  0.09223  0.37833 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              -0.01790    0.02110  -0.848 0.401214    \nl1_d_ln_real_wage        -0.38635    0.18148  -2.129 0.039318 *  \nl2_d_ln_real_wage        -0.74798    0.19933  -3.752 0.000543 ***\nl3_d_ln_real_wage        -0.28785    0.20773  -1.386 0.173331    \nl4_d_ln_real_wage        -0.41609    0.18345  -2.268 0.028655 *  \nl1_d_ln_crude_death_rate -0.21795    0.14858  -1.467 0.150030    \nl2_d_ln_crude_death_rate -0.39873    0.14154  -2.817 0.007422 ** \nl3_d_ln_crude_death_rate -0.46959    0.12402  -3.786 0.000491 ***\nl4_d_ln_crude_death_rate -0.02081    0.14534  -0.143 0.886845    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1455 on 41 degrees of freedom\n  (4 observations deleted due to missingness)\nMultiple R-squared:  0.459, Adjusted R-squared:  0.3534 \nF-statistic: 4.348 on 8 and 41 DF,  p-value: 0.0007355\n\n\n[[2]]\n\nCall:\nlm(formula = d_ln_crude_death_rate ~ ., data = df_temp)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.23308 -0.08450 -0.01951  0.04716  0.40095 \n\nCoefficients:\n                          Estimate Std. Error t value Pr(>|t|)   \n(Intercept)              -0.003599   0.019679  -0.183  0.85579   \nl1_d_ln_real_wage        -0.669875   0.209793  -3.193  0.00270 **\nl2_d_ln_real_wage        -0.099300   0.236031  -0.421  0.67617   \nl3_d_ln_real_wage        -0.110009   0.223259  -0.493  0.62482   \nl4_d_ln_real_wage        -0.136204   0.217440  -0.626  0.53453   \nl1_d_ln_crude_death_rate -0.350978   0.153727  -2.283  0.02768 * \nl2_d_ln_crude_death_rate -0.206345   0.142099  -1.452  0.15408   \nl3_d_ln_crude_death_rate -0.413009   0.138295  -2.986  0.00475 **\nl4_d_ln_crude_death_rate -0.193783   0.131117  -1.478  0.14706   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1387 on 41 degrees of freedom\nMultiple R-squared:  0.4041,    Adjusted R-squared:  0.2879 \nF-statistic: 3.476 on 8 and 41 DF,  p-value: 0.003795\n\n\n[[3]]\n\nCall:\nlm(formula = d_ln_crude_death_rate ~ ., data = df_temp)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.24972 -0.07429 -0.01702  0.04027  0.42011 \n\nCoefficients:\n                          Estimate Std. Error t value Pr(>|t|)   \n(Intercept)               0.007543   0.018804   0.401  0.69041   \nl1_d_ln_real_wage         0.226045   0.161795   1.397  0.16990   \nl2_d_ln_real_wage         0.110585   0.168958   0.655  0.51644   \nl3_d_ln_real_wage         0.225356   0.167501   1.345  0.18589   \nl4_d_ln_real_wage         0.132567   0.160166   0.828  0.41264   \nl1_d_ln_crude_death_rate -0.420488   0.158959  -2.645  0.01152 * \nl2_d_ln_crude_death_rate -0.471103   0.158121  -2.979  0.00484 **\nl3_d_ln_crude_death_rate -0.331769   0.163544  -2.029  0.04903 * \nl4_d_ln_crude_death_rate  0.011955   0.157786   0.076  0.93997   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1321 on 41 degrees of freedom\nMultiple R-squared:  0.3326,    Adjusted R-squared:  0.2024 \nF-statistic: 2.555 on 8 and 41 DF,  p-value: 0.02333\n\n\n[[4]]\n\nCall:\nlm(formula = d_ln_crude_death_rate ~ ., data = df_temp)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.203460 -0.049068  0.003584  0.041974  0.199835 \n\nCoefficients:\n                          Estimate Std. Error t value Pr(>|t|)  \n(Intercept)               0.004618   0.013619   0.339   0.7363  \nl1_d_ln_real_wage        -0.428433   0.183713  -2.332   0.0247 *\nl2_d_ln_real_wage        -0.164349   0.184840  -0.889   0.3791  \nl3_d_ln_real_wage        -0.250078   0.180839  -1.383   0.1742  \nl4_d_ln_real_wage         0.084341   0.183335   0.460   0.6479  \nl1_d_ln_crude_death_rate -0.032322   0.155396  -0.208   0.8363  \nl2_d_ln_crude_death_rate -0.229270   0.145303  -1.578   0.1223  \nl3_d_ln_crude_death_rate -0.256747   0.145251  -1.768   0.0846 .\nl4_d_ln_crude_death_rate  0.085290   0.153253   0.557   0.5809  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.09458 on 41 degrees of freedom\nMultiple R-squared:  0.3128,    Adjusted R-squared:  0.1787 \nF-statistic: 2.333 on 8 and 41 DF,  p-value: 0.03637\n\n\n[[5]]\n\nCall:\nlm(formula = d_ln_crude_death_rate ~ ., data = df_temp)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.108223 -0.031518 -0.005504  0.029754  0.093847 \n\nCoefficients:\n                          Estimate Std. Error t value Pr(>|t|)   \n(Intercept)              -0.000632   0.007377  -0.086  0.93214   \nl1_d_ln_real_wage         0.180114   0.153033   1.177  0.24600   \nl2_d_ln_real_wage         0.193466   0.154924   1.249  0.21883   \nl3_d_ln_real_wage         0.357952   0.154271   2.320  0.02538 * \nl4_d_ln_real_wage         0.460454   0.164170   2.805  0.00766 **\nl1_d_ln_crude_death_rate -0.473955   0.141671  -3.345  0.00177 **\nl2_d_ln_crude_death_rate -0.281857   0.142263  -1.981  0.05430 . \nl3_d_ln_crude_death_rate -0.210367   0.143704  -1.464  0.15085   \nl4_d_ln_crude_death_rate  0.225747   0.145367   1.553  0.12812   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.05174 on 41 degrees of freedom\nMultiple R-squared:  0.4289,    Adjusted R-squared:  0.3175 \nF-statistic:  3.85 on 8 and 41 DF,  p-value: 0.001858\n\n\nHow can we format these better??\n\ndf_by_period_reg %>% \n  mutate(tidy = map(model, ~ broom::tidy(., conf.int = T))) %>% \n  unnest(tidy) %>% \n  filter(term != \"(Intercept)\") %>% \n  mutate(term = fct_reorder(term, estimate)) %>% \n  ggplot(aes(estimate, term, colour = factor(period))) +\n  geom_point() +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high)) +\n  facet_wrap(~ period) +\n  geom_vline(xintercept = 0, lty = 2)\n\n\n\n\n\n# df_by_period_reg %>% \n#   mutate(reg = map(model, gtsummary::tbl_regression)) %>% \n#   pull(reg)\n\n\ndf_by_period_reg %>%\n  mutate(augment = map(model, broom::augment)) %>%\n  unnest(augment) %>%\n  # remove the first four NA years because of the lags (4 lags)\n  bind_cols(periods %>% tail(250) %>% dplyr::select(-period)) %>%\n  ggplot(aes(year, .fitted, group = period, colour = factor(period))) +\n  geom_line(alpha = 1 / 3) +\n  geom_smooth(se = FALSE)\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\n\n\nRegression:\ndependent variable: first difference of logged crude death rate\nindependent variables: lags 1 through 4 of first diff of ln crude death rate and first diff of ln real gdp per capita\n\n# reg d.LnCrudeDeathRate L(1/4)d.LnCrudeDeathRate L(0/4)d.LnRealGDPpc if tin(1546,1599)\n# predict Residuals if tin(1546,1599), res /* generate the residuals as a new variable */ \n# tsline Residuals if tin(1546,1599) /* plot the residuals */\n\n\nlibrary(gtsummary)\n\nWarning: package 'gtsummary' was built under R version 4.1.2\n\nreg_1 <- df %>%\n  filter(between(year, 1546, 1599)) %>%\n  dplyr::select(c(\n    contains(\"d_ln_real_gdp_pc\"),\n    contains(\"d_ln_crude_death_rate\")\n  )) %>%\n  lm(d_ln_crude_death_rate ~ ., data = .)\n\nreg_1 %>% \n  tbl_regression() %>% \n  add_significance_stars()\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta1\n      SE2\n    \n  \n  \n    d_ln_real_gdp_pc\n0.33\n0.236\n    l1_d_ln_real_gdp_pc\n-0.59*\n0.260\n    l2_d_ln_real_gdp_pc\n-0.85**\n0.300\n    l3_d_ln_real_gdp_pc\n-0.84*\n0.325\n    l4_d_ln_real_gdp_pc\n-0.02\n0.309\n    l1_d_ln_crude_death_rate\n-0.30\n0.157\n    l2_d_ln_crude_death_rate\n-0.16\n0.142\n    l3_d_ln_crude_death_rate\n-0.30*\n0.133\n    l4_d_ln_crude_death_rate\n-0.03\n0.139\n  \n  \n  \n    \n      \n        \n          \n            1\n          \n           \n          *p<0.05; **p<0.01; ***p<0.001\n          \n        \n        \n          \n            2\n          \n           \n          SE = Standard Error\n          \n        \n      \n    \n  \n\n\n\n\nPlot the residuals\n\nreg_1_augmented <- reg_1 %>% \n  broom::augment() %>% \n  bind_cols(periods %>%\n    dplyr::select(year) %>%\n    slice(5L:54L))\n\nreg_1_augmented %>% \n  ggplot(aes(year, .resid)) +\n  geom_line(colour = \"red\")\n\n\n\n\n\n\n\n\nlibrary(vars)\n\nWarning: package 'vars' was built under R version 4.1.3\n\n\nLoading required package: MASS\n\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:gtsummary':\n\n    select\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\nLoading required package: strucchange\n\n\nWarning: package 'strucchange' was built under R version 4.1.3\n\n\nLoading required package: zoo\n\n\nWarning: package 'zoo' was built under R version 4.1.3\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nLoading required package: sandwich\n\n\nWarning: package 'sandwich' was built under R version 4.1.3\n\n\n\nAttaching package: 'strucchange'\n\n\nThe following object is masked from 'package:stringr':\n\n    boundary\n\n\nLoading required package: urca\n\n\nLoading required package: lmtest\n\n\nWarning: package 'lmtest' was built under R version 4.1.3\n\nadf_test_trend <- ur.df(reg_1_augmented$.resid, type = \"trend\")\n\nadf_test_trend %>% summary()\n\n\n############################################### \n# Augmented Dickey-Fuller Test Unit Root Test # \n############################################### \n\nTest regression trend \n\n\nCall:\nlm(formula = z.diff ~ z.lag.1 + 1 + tt + z.diff.lag)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.284507 -0.087212  0.006262  0.081510  0.254474 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.0219943  0.0395612   0.556 0.581057    \nz.lag.1     -0.9218949  0.2198818  -4.193 0.000131 ***\ntt          -0.0009444  0.0013623  -0.693 0.491768    \nz.diff.lag  -0.0474320  0.1569519  -0.302 0.763918    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1305 on 44 degrees of freedom\nMultiple R-squared:  0.4827,    Adjusted R-squared:  0.4474 \nF-statistic: 13.68 on 3 and 44 DF,  p-value: 1.93e-06\n\n\nValue of test-statistic is: -4.1927 5.9638 8.8931 \n\nCritical values for test statistics: \n      1pct  5pct 10pct\ntau3 -4.15 -3.50 -3.18\nphi2  7.02  5.13  4.31\nphi3  9.31  6.73  5.61\n\n\n\nadf_test_none <- ur.df(reg_1_augmented$.resid, type = \"none\")\n\nadf_test_none %>% summary()\n\n\n############################################### \n# Augmented Dickey-Fuller Test Unit Root Test # \n############################################### \n\nTest regression none \n\n\nCall:\nlm(formula = z.diff ~ z.lag.1 - 1 + z.diff.lag)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.293606 -0.089575 -0.004895  0.078174  0.269227 \n\nCoefficients:\n           Estimate Std. Error t value Pr(>|t|)    \nz.lag.1    -0.91447    0.21562  -4.241 0.000106 ***\nz.diff.lag -0.04852    0.15399  -0.315 0.754134    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1283 on 46 degrees of freedom\nMultiple R-squared:  0.477, Adjusted R-squared:  0.4542 \nF-statistic: 20.97 on 2 and 46 DF,  p-value: 3.36e-07\n\n\nValue of test-statistic is: -4.2411 \n\nCritical values for test statistics: \n      1pct  5pct 10pct\ntau1 -2.62 -1.95 -1.61\n\n\n\nadf_test_drift <- ur.df(reg_1_augmented$.resid, type = \"drift\")\n\nadf_test_drift %>% summary()\n\n\n############################################### \n# Augmented Dickey-Fuller Test Unit Root Test # \n############################################### \n\nTest regression drift \n\n\nCall:\nlm(formula = z.diff ~ z.lag.1 + 1 + z.diff.lag)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.29139 -0.08746 -0.00280  0.08031  0.27117 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.002111   0.018765  -0.112 0.910946    \nz.lag.1     -0.913223   0.218255  -4.184 0.000131 ***\nz.diff.lag  -0.049675   0.156010  -0.318 0.751649    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1297 on 45 degrees of freedom\nMultiple R-squared:  0.477, Adjusted R-squared:  0.4538 \nF-statistic: 20.52 on 2 and 45 DF,  p-value: 4.634e-07\n\n\nValue of test-statistic is: -4.1842 8.807 \n\nCritical values for test statistics: \n      1pct  5pct 10pct\ntau2 -3.58 -2.93 -2.60\nphi1  7.06  4.86  3.94\n\n\n\n\n\n\n# library(plm)\n# \n# df_bp <- df %>%\n#   dplyr::filter(dplyr::between(year, 1546, 1599)) %>%\n#   dplyr::select(c(\n#     contains(\"d_ln_real_gdp_pc\"),\n#     contains(\"d_ln_crude_death_rate\")\n#   )) %>% na.omit()\n# \n# df_bp %>% colnames() %>% paste0(., collapse = \" + \")\n# \n# plmtest(d_ln_real_gdp_pc ~ l1_d_ln_real_gdp_pc + l2_d_ln_real_gdp_pc + l3_d_ln_real_gdp_pc + l4_d_ln_real_gdp_pc + d_ln_crude_death_rate + l1_d_ln_crude_death_rate + l2_d_ln_crude_death_rate + l3_d_ln_crude_death_rate + l4_d_ln_crude_death_rate, \n#         data = df_bp, \n#         type = \"bp\")"
  },
  {
    "objectID": "replication-in-R/Okun's Law.html",
    "href": "replication-in-R/Okun's Law.html",
    "title": "Okun’s Law",
    "section": "",
    "text": "Translate the code from session 1 to R.\n\n\n\nlibrary(tidyverse)\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.3.5     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n\n\nWarning: package 'tibble' was built under R version 4.1.2\n\n\nWarning: package 'readr' was built under R version 4.1.2\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\ntheme_set(theme_light())\n\ndf <- readxl::read_excel(here::here(\"course-content/Class 1/Okun's Law.xlsx\"), range = \"A1:E45\")\n\ndf <- df %>% \n  janitor::clean_names()\n\n\n\n\n\ndf %>%\n  ggplot(aes(x = change_in_unemployment_rate_pp, y = real_gdp_growth_percent)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 1)) +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  geom_vline(xintercept = 0, lty = 2) +\n  geom_hline(yintercept = 0, lty = 2) +\n  labs(\n    x = \"Change in unemployment rate\",\n    y = \"Real GDP Growth\",\n    title = \"Okun's Law in the UK\",\n    subtitle = \"1871-1913\"\n  )\n\n`geom_smooth()` using formula 'y ~ x'\n\n\nWarning: Removed 1 rows containing non-finite values (stat_smooth).\n\n\nWarning: Removed 1 rows containing missing values (geom_point).\n\n\n\n\n\n\n\n\n\nlm <- lm(real_gdp_growth_percent ~ change_in_unemployment_rate_pp, data = df)\n\nlm %>%\n  broom::tidy()\n\n# A tibble: 2 x 5\n  term                           estimate std.error statistic       p.value\n  <chr>                             <dbl>     <dbl>     <dbl>         <dbl>\n1 (Intercept)                        1.83     0.251      7.30 0.00000000631\n2 change_in_unemployment_rate_pp    -1.36     0.218     -6.25 0.000000193  \n\nlm %>% \n  gtsummary::tbl_regression(intercept = T) \n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n1.8\n1.3, 2.3\n<0.001\n    change_in_unemployment_rate_pp\n-1.4\n-1.8, -0.92\n<0.001\n  \n  \n  \n    \n      \n        \n          \n            1\n          \n           \n          CI = Confidence Interval"
  },
  {
    "objectID": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html",
    "href": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html",
    "title": "Swedish Real GDP per Capita, 1800-2010",
    "section": "",
    "text": "Translate the code from session 2 to R.\n\n\n\nlibrary(tidyverse)\ntheme_set(theme_light())\ndf <- readxl::read_excel(here::here(\"course-content/Class 2/Swedish Real GDP per Capita, 1800-2010.xlsx\"))\n\ndf <- df %>% \n  janitor::clean_names()\n\ndf <- df %>% \n  mutate(ln_real_gdp_per_capita = log(real_gdp_per_capita)*100)\n\n\n\n\n\ndf %>% \n  ggplot(aes(year, real_gdp_per_capita)) +\n  geom_point() +\n  geom_line()\n\n\n\ndf %>% \n  ggplot(aes(year, ln_real_gdp_per_capita)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\n\n\nIn the function below we do a number of things\nI walk through each:\n\nWe have two inputs, the smoothing factor, sf and a label called label.\nFrom the mFilter library we call hpfilter on the logged version of the real gdp series. We supply the smoothing factor with command freq = sf. This is assigned to hp as an mFilter list object.\nWe create a tibble from this object which is easier to work with.\nWe create our differenced variables for the cycle and trend components.\nWe save this tibble as an RDS file with the label we provide as an argument to the function.\nWe then plot the series components as a ggplot, faceting by the components.\n\n\n# tsfilter hp HP_Cycle_100 = ln_RealGDPperCapita, smooth(100) trend(HP_Trend_100)\n\nlibrary(mFilter)\n\nplot_hp_filter <- function(sf, label) {\n  message(\"Plotting HP filtered series with smoothing factor \", sf)\n  hp <- mFilter::hpfilter(df$ln_real_gdp_per_capita, freq = sf)\n\n  df_hp <- tibble(\n    year = df$year,\n    cycle = hp$cycle,\n    # don't know why this is hp$trend[,1]?\n    trend = hp$trend[, 1]\n  )\n\n  df_hp <- df_hp %>%\n    mutate(\n      d_cycle = cycle - lag(cycle),\n      d_trend = trend - lag(trend),\n      reg = label\n    )\n\n  df_hp %>% write_rds(here::here(paste0(\"replication-in-R/Class 2/\", label, \".rds\")))\n\n  df_hp %>%\n    pivot_longer(cycle:d_trend) %>%\n    # this puts the facets in a nice order\n    mutate(name = fct_relevel(name, \"d_trend\", after = 3L)) %>%\n    ggplot(aes(year, value, colour = name)) +\n    geom_line(show.legend = F) +\n    facet_wrap(~name, nrow = 2, scales = \"free\") +\n    labs(\n      x = \"Year\",\n      y = \"ln_RealGDPperCapita cycle and trend components from hp filter\",\n      title = paste0(\"Smoothing factor \", sf)\n    )\n}\n\n\nplot_hp_filter(100, \"hp_100\")\n\n\n\n\n\n\n\n\n# tsfilter hp HP_Cycle_10000 = ln_RealGDPperCapita, smooth(10000) trend(HP_Trend_10000)\n\nplot_hp_filter(10000, \"hp_10000\")\n\n\n\n\n\n\n\n\n# tsfilter hp HP_Cycle_6 = ln_RealGDPperCapita, smooth(6.25) trend(HP_Trend_6)\n\nplot_hp_filter(6.25, \"hp_6_25\")"
  },
  {
    "objectID": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html#regression-smoothing",
    "href": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html#regression-smoothing",
    "title": "Swedish Real GDP per Capita, 1800-2010",
    "section": "Regression smoothing",
    "text": "Regression smoothing\nHere we use our mutate command to create the variables we will need for the quadratic regression and the Hamilton filter.\n\ndf <- df %>% \n  mutate(year_2 = year^2,\n         l2_ln_real_gdp_per_capita = lag(ln_real_gdp_per_capita, n = 2))\n\nNow we create a function that will take a list of variables and a label. It does a regression, prints a summary of the regression and then makes a plot of the original logged series and a trend line created from the coefficients in the regression.\n\naugment_reg <- function(var, label) {\n  df_temp <- df %>%\n    select(ln_real_gdp_per_capita, {{ var }})\n\n  reg <- lm(ln_real_gdp_per_capita ~ ., data = df_temp)\n\n  summary <- reg %>% summary()\n\n  df_reg <- reg %>%\n    broom::augment() %>%\n    mutate(\n      trend = .fitted,\n      cycle = .resid,\n      d_cycle = cycle - lag(cycle),\n      d_trend = trend - lag(trend),\n      reg = label\n    )\n\n  df_reg %>% write_rds(here::here(paste0(\"replication-in-R/Class 2/\", label, \".rds\")))\n\n  plot <- df_reg %>%\n    pivot_longer(cols = c(ln_real_gdp_per_capita, trend)) %>%\n    ggplot(aes(year, value, colour = name)) +\n    geom_line()\n  \n  out <- list(summary, plot)\n  \n  return(out)\n  \n}\n\n\nOLS\n\nLinear\nThe linear regression obviously produces a nice straight regression line.\n\n# reg ln_RealGDPperCapita Year\n# predict OLS_Lin_Trend, xb\n# predict OLS_Lin_Cycle, res\n\naugment_reg(year, \"linear_reg\")\n\n[[1]]\n\nCall:\nlm(formula = ln_real_gdp_per_capita ~ ., data = df_temp)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-43.270 -24.553  -4.986  24.971  59.570 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -2432.0502    57.3685  -42.39   <2e-16 ***\nyear            1.7003     0.0301   56.49   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.63 on 209 degrees of freedom\nMultiple R-squared:  0.9385,    Adjusted R-squared:  0.9382 \nF-statistic:  3191 on 1 and 209 DF,  p-value: < 2.2e-16\n\n\n[[2]]\n\n\n\n\n\n\n\nQuadratic\nThe quadratic regression produces a lovely parabolic shape.\n\n# gen Year2 = Year^2\n# reg ln_RealGDPperCapita Year Year2\n# predict OLS_Nonlin_Trend, xb\n# predict OLS_Nonlin_Cycle, res\n\naugment_reg(c(year, year_2), \"quadratic_reg\")\n\n[[1]]\n\nCall:\nlm(formula = ln_real_gdp_per_capita ~ ., data = df_temp)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-32.283  -5.950  -1.446   6.157  26.128 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.426e+04  7.781e+02   31.18   <2e-16 ***\nyear        -2.636e+01  8.175e-01  -32.24   <2e-16 ***\nyear_2       7.364e-03  2.145e-04   34.32   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.34 on 208 degrees of freedom\nMultiple R-squared:  0.9908,    Adjusted R-squared:  0.9907 \nF-statistic: 1.117e+04 on 2 and 208 DF,  p-value: < 2.2e-16\n\n\n[[2]]\n\n\n\n\n\n\n\n\nHamilton\nFor yearly data: yt+2 = β0 + β1yt + ut+2.\nI think this is wrong though?\n\n# reg ln_RealGDPperCapita L2.ln_RealGDPperCapita\n# predict Ham_Trend, xb\n# predict Ham_Cycle, res\n\nlm_hamilton <- lm(ln_real_gdp_per_capita ~ l2_ln_real_gdp_per_capita, data = df)\n\nlm_hamilton %>% \n  summary()\n\n\nCall:\nlm(formula = ln_real_gdp_per_capita ~ l2_ln_real_gdp_per_capita, \n    data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-17.9392  -2.8542   0.4106   3.2793  13.4767 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               -4.705552   2.759536  -1.705   0.0897 .  \nl2_ln_real_gdp_per_capita  1.009656   0.003399 297.059   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.189 on 207 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.9977,    Adjusted R-squared:  0.9976 \nF-statistic: 8.824e+04 on 1 and 207 DF,  p-value: < 2.2e-16\n\ndf_lm_hamilton <- lm_hamilton %>% \n  broom::augment() %>% \n  bind_cols(df %>% \n              select(year) %>% \n              tail(209)) %>% \n  select(-.rownames)\n\ndf_lm_hamilton %>%\n  mutate(reg = \"hamilton\") %>%\n  mutate(\n    trend = .fitted,\n    cycle = .resid,\n    d_cycle = cycle - lag(cycle),\n    d_trend = trend - lag(trend),\n  ) %>%\n  write_rds(here::here(paste0(\"replication-in-R/Class 2/\", \"hamilton\", \".rds\")))\n\n\ndf_lm_hamilton %>% \n  pivot_longer(cols = c(ln_real_gdp_per_capita, .fitted)) %>% \n  ggplot(aes(year, value, colour = name)) +\n  geom_line()"
  },
  {
    "objectID": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html#comparison-1",
    "href": "replication-in-R/Swedish Real GDP per Capita, 1800-2010.html#comparison-1",
    "title": "Swedish Real GDP per Capita, 1800-2010",
    "section": "Comparison",
    "text": "Comparison\nRead in all of the data\n\nfilelist <- list.files(here::here(paste0(\"replication-in-R/Class 2/\")), pattern = \".rds\") %>%\n  as_tibble() %>%\n  rename(filename = value) %>%\n  mutate(path = str_c(here::here(paste0(\"replication-in-R/Class 2/\", filename))))\n\ndf_long <- filelist %>%\n  mutate(data = purrr::map(path, read_rds))\n\ndf_long <- df_long %>%\n  select(-c(filename, path)) %>%\n  unnest(cols = c(data))\n\n\nComparison of all components\n\ndf_long %>%\n  pivot_longer(cols = c(trend, cycle, d_trend, d_cycle)) %>%\n  mutate(name = fct_relevel(name, \"d_trend\", after = 3L)) %>%\n  ggplot(aes(year, value, colour = reg)) +\n  geom_line() +\n  facet_wrap(~name, scales = \"free_y\") +\n  labs(x = \"Year\",\n       y = NULL,\n       colour = \"Smoother\")\n\n\n\n\n\n\nComparison of trend components\n\ndf_long %>%\n  pivot_longer(cols = c(trend, cycle, d_trend, d_cycle)) %>%\n  filter(name == \"trend\") %>% \n  ggplot(aes(year, value, colour = reg)) +\n  geom_line() +\n  facet_wrap(~name, scales = \"free_y\") +\n  labs(x = \"Year\",\n       y = NULL,\n       colour = \"Smoother\")\n\n\n\n\n\n\nComparison of cycle components\n\ndf_long %>%\n  pivot_longer(cols = c(trend, cycle, d_trend, d_cycle)) %>%\n  filter(name == \"cycle\") %>% \n  ggplot(aes(year, value, colour = reg)) +\n  geom_line() +\n  facet_wrap(~name, scales = \"free_y\") +\n  labs(x = \"Year\",\n       y = NULL,\n       colour = \"Smoother\")\n\n\n\n\n\n\nCorrelation\n\nlibrary(corrr)\n\ncorr <- df_long %>% \n  select(year, reg, cycle) %>% \n  pivot_wider(names_from = reg, values_from = cycle) %>% \n  select(-year) %>% \n  correlate() %>% \n  rearrange() %>% \n  shave()\n\ncorr %>% \n  knitr::kable(digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nterm\nhp_100\nhp_6_25\nhp_1000\nhamilton\nhp_10000\nquadratic_reg\nlinear_reg\n\n\n\n\nhp_100\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nhp_6_25\n0.904\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nhp_1000\n0.947\n0.786\nNA\nNA\nNA\nNA\nNA\n\n\nhamilton\n0.680\n0.742\n0.603\nNA\nNA\nNA\nNA\n\n\nhp_10000\n0.819\n0.659\n0.942\n0.508\nNA\nNA\nNA\n\n\nquadratic_reg\n0.372\n0.296\n0.449\n0.318\n0.576\nNA\nNA\n\n\nlinear_reg\n0.144\n0.115\n0.175\n-0.051\n0.232\n0.387\nNA\n\n\n\n\n\nWe can visualize this nicely too\n\ncorr %>% \n  rplot(shape = 15, colours = c(\"darkorange\", \"darkcyan\", \"pink\"), print_cor = T)"
  }
]