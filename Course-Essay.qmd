---
title: "Replication and Critique of Post-Malthusian Dynamicsin Pre-Industrial Scandinavia"
---

# Purpose

Assessment: 2,500 word essay. Write a referee report that critically dscusses a paper in economic history, focussing on the strengths and weaknesses of the research design. You may modify or extend the analysis. Chose a paper that uses one of the quantitative techniques that we have discuessed in class. Due 5 September 2022.

## Paper

Post-Malthusian Dynamicsin Pre-Industrial Scandinavia by Marc Klemp and Niels Framroze Moller

### What's it about?

Is there a post-malthusian phase in the transition between stagnatio and growth in Scandinavia.

#### What's gonna be hard?

If there's a lot of different data and tests making them digestible is going to be difficult.

Moller and Sharp 2014 "formulate and test a simple dynamic post-Malthusian model. Using an-nual series of real wages, marriage rates, birth rates, and death rates forpre-industrial England, they find evidence consistent with post-Malthusian dynamics emerging as early as the mid-16th century. Likewise, Klemp(2012) formulated and estimated a two-sector Malthusian model on pre-industrial English data and found evidence in favor of Malthusian dynamics exhibiting some post-Malthusian characteristics"

### What do I want to add??

Maybe try some different sources for Swedish data and see what changes?

## What to recreate?

Table 1: exerpt of Maddison database. 

```{r}
library(tidyverse)

df <- readxl::read_excel(here::here("data", "mpd2020.xlsx"), sheet = 4, skip = 1)

df <- df %>% 
  pivot_longer(-year) %>% 
  filter(!is.na(value))

library(countrycode)

df <- df %>% 
  mutate(country_name = countrycode(name, "iso3c", "country.name"))

scandi <- c("Sweden", "Denmark", "Norway")

df %>% 
  filter(country_name %in% c(scandi, "United Kingdom")) %>% 
  ggplot(aes(year, value, colour = country_name)) +
  geom_point() +
  geom_line() +
  coord_cartesian(xlim = c(1500, 1900)) +
  scale_y_log10(labels = scales::dollar_format()) 

df_2020 <- df %>% 
  mutate(version = "2020")
```

Table 1: Old Maddison data

```{r}
df <- readxl::read_excel(here::here("data", "md2010.xlsx"), sheet = 4, skip = 2)

df <- df %>% 
  rename(year = ...1) %>% 
  pivot_longer(-year, names_to = "country_name") %>% 
  filter(!is.na(value)) %>% 
  mutate(country_name = case_when(
    country_name == "UK" ~ "United Kingdom",
    TRUE ~ country_name
  ))

scandi <- c("Sweden", "Denmark", "Norway")

df %>% 
  filter(country_name %in% c(scandi, "United Kingdom")) %>% 
  ggplot(aes(year, value, colour = country_name)) +
  geom_point() +
  geom_line() +
  coord_cartesian(xlim = c(1500, 1900)) +
  scale_y_log10(labels = scales::dollar_format()) 

df_2010 <- df %>% 
  mutate(name = countrycode(country_name, "country.name", "iso3c"),
         version = "2010")
```


```{r}
df <- df_2010 %>% 
  bind_rows(df_2020)
```


First critique - which Maddison database to use??

Was Sweden a poor as previously supposed?

```{r}
df %>% 
  filter(country_name %in% c(scandi, "United Kingdom")) %>% 
  ggplot(aes(year, value, colour = version)) +
  geom_point() +
  geom_line() +
  facet_wrap(~ country_name) +
  coord_cartesian(xlim = c(1500, 1900)) +
  scale_y_log10(labels = scales::dollar_format()) 
```


```{r}
df %>% 
  filter(country_name %in% c(scandi, "United Kingdom")) %>% 
  ggplot(aes(year, value, colour = country_name)) +
  geom_point() +
  geom_line() +
  facet_wrap(~ version, nrow = 2) +
  coord_cartesian(xlim = c(1500, 1900)) +
  scale_y_log10(labels = scales::dollar_format()) 
```

## Data

"The estimation is based on yearly observations of real wages, crude birthrates (i.e., the number of births per thousand inhabitants), and crude deathrates (i.e., the number of births per thousand inhabitants) for Denmark,Norway, and Sweden."

### Data Denmark

"The crude demographic rates for Denmark are taken from Mitchell (1998, see their Table A6)"

There is also data for Norway and Sweden in Mitchell. Let's do a comparison.

Pages to extract data from: 112, 113, 116, 120, 123, 127, 130, 133, 134

See ingestion files for data.

```{r}
df <- read_rds("data/mitchell_collected.rds")

df %>%
  # filter(country %in% c("Sweden", "Norway", "Denmark")) %>%
  filter(country %in% c("Denmark")) %>%
  ggplot(aes(year, value, colour = var)) +
  geom_line() +
  facet_wrap(~var, nrow = 3) +
  labs(x = "Year",
       y = "Value of metric per 1000 people",
       title = "Births, deaths and marriages in Denmark",
       subtitle = "Source: Mitchell 1998")
```


### Data Norway

```{r}
# url <- "https://www.ssb.no/a/folketellinger/tabeller/3-13.html"

# library(rvest)
# 
# table <- read_html(url)
# 
# table <- table %>% 
#   html_table()
# 
# table <- table[[3]]
# 
# headers <- table %>% 
#   filter(row_number() == 2)
# 
# headers <- headers %>% 
#   pivot_longer(everything()) %>% 
#   select(value)
# 
# headers <- headers %>% 
#   mutate(english = c("year",
#                      "population",
#                      "born",
#                      "died",
#                      "immigration",
#                      "emmigration",
#                      "married",
#                      "born_out_of_wedlock",
#                      "born_per_1000",
#                      "died_per_1000",
#                      "empty"))
# 
# headers <- headers %>% select(english) %>% pull()
# 
# table <- table %>% 
#   filter(row_number() > 4)
# 
# colnames(table) <- headers
# 
# table <- table %>% 
#   select(-empty) %>% 
#   mutate(across(everything(), parse_number))
# 
# table <- table %>% 
#   mutate(country_name = "Norway")

# table %>% write_rds("data/norway_demographics.rds")
table <- read_rds("data/norway_demographics.rds")
```

### Data Sweden

```{r}
df <- readxl::read_excel("data/Sweden_demographics_lu_madd.xls", range = "A6:F257") %>% janitor::clean_names()

df <- df %>% 
  filter(!is.na(year))

# df %>% write_rds("data/sweden_demographics.rds")

df %>% 
  select(-mid_population) %>% 
  pivot_longer(-year) %>% 
  ggplot(aes(year, value, colour = name)) +
  geom_line()
```

Source: LU MADD - their source: Tabell 2.2 SCB. Demografiska rapporter 1999:2 " Befolkningsutvecklingen under 250 Ã¥r"

Swedish wages

```{r}
df <- read_rds("data/Joberg_day_wages_sweden.rds")

df %>% 
  ggplot(aes(year, average_price_1)) +
  geom_line()
```

Swedish wage deflator

```{r}
library(datapasta)
datapasta::df_paste()

df <- data.frame(
  stringsAsFactors = FALSE,
                            Year.Deflator = c("index",
                                              "Inflation","index Year Both",
                                              "indices Year Both","indices Year Both",
                                              "indices",
                                              "1701 3.454 1.727 1747 6.007 1793 15.43 1839 61.43",
                                              "1702 3.805 1.902 1748 6.453 1794 17.72 1840 61.02",
                                              "1703 3.765 1.882 1749 6.022 1795 18.63 1841 63.81",
                                              "1704 3.252 1.626 1750 5.764 1796 18.51 1842 63.40",
                                              "1705 3.556 1.778 1751 6.070 1797 19.04 1843 60.35",
                                              "1706 3.504 1.752 1752 6.067 1798 20.63 1844 55.46",
                                              "1707 4.130 2.065 1753 5.923 1799 23.93 1845 61.63",
                                              "1708 4.327 2.163 1754 6.202 1800 28.66 1846 63.87",
                                              "1709 6.098 3.049 1755 6.627 1801 27.87 1847 64.63",
                                              "1710 3.976 1.988 1756 7.364 1802 27.06 1848 60.93",
                                              "1711 3.651 1.825 1757 7.949 1803 25.98 1849 60.41",
                                              "1712 3.863 1.931 1758 7.967 1804 27.10 1850 63.43",
                                              "1713 3.715 1.858 1759 7.511 1805 28.01 1851 65.58",
                                              "1714 4.680 2.340 1760 7.824 1806 31.70 1852 64.99",
                                              "1715 4.348 2.174 1761 9.079 1807 32.82 1853 70.05",
                                              "1716 5.266 2.791 1762 12.65 1808 42.37 1854 71.50",
                                              "1717 7.913 4.906 1763 13.71 1809 43.00 1855 83.40",
                                              "1718 7.790 5.843 1764 14.49 1810 43.82 1856 89.23",
                                              "1719 9.983 9.983 1765 13.58 1811 50.29 1857 87.34",
                                              "1720 6.172 6.172 1766 12.05 1812 59.73 1858 75.22",
                                              "1721 6.038 6.038 1767 9.80 1813 58.36 1859 73.23",
                                              "1722 4.964 4.964 1768 8.61 1814 57.13 1860 79.24",
                                              "1723 4.830 4.830 1769 8.50 1815 54.06 1861 82.92",
                                              "1724 4.703 4.703 1770 9.48 1816 58.12 1862 80.56",
                                              "1725 4.673 4.673 1771 11.66 1817 59.04 1863 77.43",
                                              "1726 5.079 5.079 1772 12.24 1818 60.78 1864 73.41",
                                              "1727 5.140 5.140 1773 11.28 1819 61.33 1865 73.81",
                                              "1728 4.606 4.606 1774 9.92 1820 55.13 1866 76.62",
                                              "1729 4.327 4.327 1775 11.62 1821 51.05 1867 85.84",
                                              "1730 4.272 4.272 1776 11.61 1822 51.42 1868 85.10",
                                              "1731 4.054 4.054 1777 11.85 1823 49.06 1869 76.91",
                                              "1732 4.084 4.084 1778 12.48 1824 49.30 1870 77.17",
                                              "1733 4.401 4.401 1779 12.30 1825 50.83 1871 78.68",
                                              "1734 4.242 4.242 1780 12.39 1826 60.37 1872 82.17",
                                              "1735 4.414 4.414 1781 13.05 1827 54.04 1873 89.44",
                                              "1736 4.604 4.604 1782 13.09 1828 50.22 1874 90.78",
                                              "1737 4.148 4.148 1783 13.67 1829 53.24 1875 89.84",
                                              "1738 3.985 3.985 1784 12.43 1830 55.88 1876 89.80",
                                              "1739 4.389 4.389 1785 13.29 1831 61.32 1877 89.60",
                                              "1740 5.149 5.149 1786 13.60 1832 56.94 1878 81.71",
                                              "1741 5.716 5.716 1787 12.83 1833 55.65 1879 77.94",
                                              "1742 5.312 5.312 1788 13.58 1834 57.20 1880 82.62",
                                              "1743 5.136 5.136 1789 13.95 1835 56.81 1881 84.34",
                                              "1744 4.912 4.912 1790 13.91 1836 58.34 1882 83.73",
                                              "1745 5.432 5.432 1791 13.72 1837 61.69 1883 82.03",
                                              "1746 5.669 5.669 1792 14.63 1838 63.82 1884 78.99")
                       )


df <- df %>%
  as_tibble() %>%
  janitor::clean_names() %>%
  filter(row_number() > 6) %>%
  separate(year_deflator, into = c("year_1", "value_1", "value_2", "year_2", "value_3", "year_3", "value_4", "year_4", "value_5"), sep = " ")

df_temp <- df %>%
  select(year = year_1, value = value_1) %>%
  bind_rows(df %>%
    select(year = year_2, value = value_3)) %>%
  bind_rows(df %>%
    select(year = year_3, value = value_4)) %>%
  bind_rows(df %>%
    select(year = year_4, value = value_5))

df <- data.frame(
  stringsAsFactors = FALSE,
            Year.Both = c("indices","Year Both",
                          "indices","Year Both","indices","Year Both",
                          "indices","Year Both","indices",
                          "1885 74.88 1910 91.69 1935 155 1960 407 1985 2246",
                          "1886 71.05 1911 92.80 1936 157 1961 416 1986 2341",
                          "1887 66.91 1912 97.72 1937 162 1962 436 1987 2440",
                          "1888 71.00 1913 98.80 1938 165 1963 449 1988 2582",
                          "1889 73.15 1914 100.1 1939 170 1964 463 1989 2748",
                          "1890 74.40 1915 115 1940 193 1965 487 1990 3036",
                          "1891 79.27 1916 130 1941 219 1966 519 1991 3319",
                          "1892 75.95 1917 164 1942 234 1967 540 1992 3395",
                          "1893 73.85 1918 241 1943 235 1968 551 1993 3553",
                          "1894 70.01 1919 266 1944 234 1969 566 1994 3631",
                          "1895 70.07 1920 271 1945 233 1970 605 1995 3723",
                          "1896 70.63 1921 221 1946 234 1971 650 1996 3740",
                          "1897 73.80 1922 184 1947 241 1972 689 1997 3760",
                          "1898 76.27 1923 174 1948 255 1973 735 1998 3754",
                          "1899 80.85 1924 174 1949 256 1974 808 1999 3772",
                          "1900 83.05 1925 177 1950 260 1975 887 2000 3809",
                          "1901 82.58 1926 171 1951 304 1976 979 2001 3902",
                          "1902 82.94 1927 169 1952 326 1977 1090 2002 3986",
                          "1903 82.59 1928 170 1953 328 1978 1200 2003 4063",
                          "1904 82.62 1929 168 1954 331 1979 1286 2004 4078",
                          "1905 83.98 1930 162 1955 339 1980 1461 2005 4097",
                          "1906 86.91 1931 157 1956 356 1981 1638 2006 4153",
                          "1907 91.32 1932 155 1957 372 1982 1778 2007 4243",
                          "1908 93.15 1933 151 1958 388 1983 1937 2008 4390",
                          "1909 91.81 1934 152 1959 391 1984 2092 2009 (4378)")
   )

df <- df %>%
  as_tibble() %>%
  janitor::clean_names() %>%
  filter(row_number() > 9) %>%
  separate(year_both, into = c("year_1", "value_1", "year_2", "value_2", "year_3", "value_3", "year_4", "value_4", "year_5", "value_5"), sep = " ")

df_temp_2 <- df %>%
  select(year = year_1, value = value_1) %>%
  bind_rows(df %>%
    select(year = year_2, value = value_2)) %>%
  bind_rows(df %>%
    select(year = year_3, value = value_3)) %>%
  bind_rows(df %>%
    select(year = year_4, value = value_4)) %>%
  bind_rows(df %>%
    select(year = year_5, value = value_5))


df <- df_temp %>% 
  bind_rows(df_temp_2)

df <- df %>% 
  mutate(across(everything(), parse_number))

# df %>% write_rds("data/sweden_deflator_edvinsson.rds")
```




## Sweden data join and analyse

It fucking works!

```{r}
df_demographics <- read_rds("data/sweden_demographics.rds") %>% 
  select(year, cbr = live_births, cdr = deaths)

df_wages <- read_rds("data/Joberg_day_wages_sweden.rds")

df_deflator <- read_rds("data/sweden_deflator_edvinsson.rds")

df_wages <- df_wages %>% 
  left_join(df_deflator %>% rename(deflator = value))

df_wages <- df_wages %>% 
  mutate(real_wage = average_price_1 / deflator *100)

df_wages %>% 
  ggplot(aes(year, real_wage)) +
  geom_line()

df_wages <- df_wages %>% 
  select(year, real_wage)

df_sweden <- df_demographics %>% 
  inner_join(df_wages) %>% 
  filter(between(year, 1777, 1874))

df_sweden_changes <- df_sweden %>% 
  mutate(across(.cols = c(-year), .fns = ~ .x - lag(.x), .names = "fd_{.col}"))

order <- df_sweden_changes %>% 
  colnames() %>% 
  as_tibble() %>% 
  filter(value != "year") %>% 
  mutate(order = row_number())

df_sweden_changes %>% 
  pivot_longer(-year) %>% 
  inner_join(order, by = c("name" = "value")) %>% 
  mutate(name = fct_reorder(name, order)) %>% 
  ggplot(aes(year, value, colour = name)) +
  geom_line() +
  facet_wrap(~ name, scales = "free")

```


